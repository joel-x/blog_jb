knitr::opts_chunk$set(echo = TRUE,error = F, message = F, warning = F,comment = "") #c. habitual
xaringanExtra::use_clipboard()
library(prettydoc) #Paquete de tema favorito
library(reticulate) #Paquete de python en R
use_python("C:\\Users\\JXBS\\AppData\\Local\\Programs\\Python\\Python312\\python.exe")
library(kableExtra)
library(htmltools)
reticulate::repl_python()
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
from scipy import stats
keane=pd.read_csv("keane.csv")
quit
DT::datatable(head(py$keane),
rownames = F,
extensions = 'FixedColumns',
options = list(
info=F,
pageLength=5,
autoWidth=T,
scrollX=T,
paging=F,
searching=F,
initComplete = DT::JS("function(settings, json) {$(this.api().table().header()).css({'font-size' : '12px','color':'#fff','background-color':'#3C3B3A'});}")
)) %>%
DT::formatStyle(names(py$keane), backgroundColor="#949797", color = "#F6FBFB")
reticulate::repl_python()
keane["choice"]=np.where(keane["choice"]==1,"estudiante",
np.where(keane["choice"]==2,"hogar",
np.where(keane["choice"]==3,"cualificado",
np.where(keane["choice"]==4,"no-cualificado","servicio"))))
sb.scatterplot(data=keane,x="year",y="wage",hue="black")
sb.scatterplot(data=keane[keane["employ"]==1],x="year", y="wage",hue="choice")
keane["educCode"]=np.where(keane["educ"]<=9,1,np.where(keane["educ"]<=12,2,3))
sb.scatterplot(data=keane[keane["employ"]==1],x="year",y="wage",hue="educCode")
sb.scatterplot(data=keane[keane["employ"]==1],x="year", y="wage",hue="choice")
plt.show()
sb.scatterplot(data=keane[keane["employ"]==1],x="year",y="wage",hue="educCode")
plt.show
sb.scatterplot(data=keane[keane["employ"]==1],x="year",y="wage",hue="educCode")
plt.show()
sb.scatterplot(data=keane,x="year",y="wage",hue="black")
sb.show()
quit
knitr::opts_chunk$set(echo = TRUE,error = F, message = F, warning = F,comment = "") #c. habitual
xaringanExtra::use_clipboard()
library(prettydoc) #Paquete de tema favorito
library(reticulate) #Paquete de python en R
use_python("C:\\Users\\JXBS\\AppData\\Local\\Programs\\Python\\Python312\\python.exe")
library(kableExtra)
library(htmltools)
reticulate::repl_python()
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
from scipy import stats
#para graficar dentro del jupyter notebook
%matplotlib inline
reticulate::repl_python()
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
from scipy import stats
#para graficar dentro del jupyter notebook
%matplotlib inline
reticulate::repl_python()
keane=pd.read_csv("keane.csv")
quit
DT::datatable(head(py$keane),
rownames = F,
extensions = 'FixedColumns',
options = list(
info=F,
pageLength=5,
autoWidth=T,
scrollX=T,
paging=F,
searching=F,
initComplete = DT::JS("function(settings, json) {$(this.api().table().header()).css({'font-size' : '12px','color':'#fff','background-color':'#3C3B3A'});}")
)) %>%
DT::formatStyle(names(py$keane), backgroundColor="#949797", color = "#F6FBFB")
reticulate::repl_python()
keane["choice"]=np.where(keane["choice"]==1,"estudiante",
np.where(keane["choice"]==2,"hogar",
np.where(keane["choice"]==3,"cualificado",
np.where(keane["choice"]==4,"no-cualificado","servicio"))))
sb.scatterplot(data=keane,x="year",y="wage",hue="black")
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
%matplotlib inline
reticulate::repl_python()
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
%matplotlib inline
reticulate::repl_python()
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
from IPython import get_ipython
get_ipython().run_line_magic('matplotlib', 'inline')
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
from IPython import get_ipython
get_ipython().run_line_magic('matplotlib', 'inline')
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
from IPython import get_ipython
get_ipython.run_line_magic('matplotlib', 'inline')
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
from IPython import get_ipython
get_ipython().run_line_magic('matplotlib', 'inline')
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
'exec(%matplotlib inline)'
sb.scatterplot(data=keane[keane["employ"]==1],x="year", y="wage",hue="choice")
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
exec(%matplotlib inline)
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sb
#para graficar dentro del jupyter notebook
from IPython import get_ipython
ipy = get_ipython()
if ipy is not None:
ipy.run_line_magic('matplotlib', 'inline')
sb.scatterplot(data=keane,x="year",y="wage",hue="black")
sb.scatterplot(data=keane,x="year",y="wage",hue="black")
sb.scatterplot(data=keane[keane["employ"]==1],x="year", y="wage",hue="choice")
sb.scatterplot(data=keane[keane["employ"]==1],x="year",y="wage",hue="educCode")
plt.show()
sb.scatterplot(data=keane[keane["employ"]==1],x="year",y="wage",hue="educCode")
exit
