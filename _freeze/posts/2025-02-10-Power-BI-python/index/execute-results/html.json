{
  "hash": "74f2233c7718a4125ed6d746bb6a2165",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Integración de Python en Power BI\nfreeze: true\nauthor: Joel Burbano\ndate: 2025-02-10\ncategories: [Python, Power BI]\n\n\n---\n\n\n# ¿Sé puede procesar datos con un script de python en power BI?\n\nLa respuesta es sí, veamoslo con el siguiente ejemplo sencillo\n\n## Importamos datos desde un script en python \n\n### En obtener datos buscamos script de python.\n\n![](imag1.png){}\n\n### Escribimos el código necesario para importar los datos\n\n![](imag2.png)\n\nEn esta ocasión el código que usaremos será el siguiente.\n\n::: {#8ff99ed9 .cell execution_count=1}\n``` {.python .cell-code}\n# Librerias a utilizar\nimport pandas as pd\nimport numpy as np\n\n# Cargamos los datos desde el archivo csv\ndf = pd.read_csv(\"StudentsPerformance.csv\")\n\n# Procesamos los datos \n# Cambio de nombre de las columnas \ndf = df.rename(columns={'gender':'genero', 'race/ethnicity': 'raza',\n                        'parental level of education': 'educacion padres',\n                        'lunch': 'almuerzo', 'test preparation course': 'curso de preparacion',\n                        'math score': 'nota matematicas', 'reading score': 'nota lectura',\n                        'writing score': 'nota escritura'})\n#cambiamos los valores a español\ndf['genero'] = np.where(df['genero'] == 'male', 'masculino', 'femenino')\ndf['raza'] = df['raza'].str.replace('group','grupo')\ndf['educacion padres'] = np.where(df['educacion padres'] == 'some college', 'universidad incompleta',\n                                  np.where(df['educacion padres'] == \"associate's degree\", 'titulo de asociado',\n                                           np.where(df['educacion padres']=='high school', 'secundaria',\n                                                    np.where(df['educacion padres']== 'some high school', 'secundaria incompleta',\n                                                             np.where(df['educacion padres']== \"bachelor's degree\", \"licenciatura\",\n                                                                      \"maestria\")))))\n                                                                      \n                                                                      \ndf['almuerzo'] = np.where(df['almuerzo'] == 'standard', 'estandar', 'gratis/reducido')\ndf['curso de preparacion'] = np.where(df['curso de preparacion'] == 'none', 'ninguno', 'completado')\n```\n:::\n\n\nescribimos el código y damos clic en OK\n\n![](imag3.png)\n### Seleccionamos el df y damos clic en cargar y tenemos nuestros datos listo para usarlos o si deseamos podemos realizar otras transformaciones a los datos.\n \n\n![](imag4.png)\n\n## ¿Sé puede insertar elementos visuales de python en Power BI?\n\nSí, veamos un ejemplo:\n\nEn el panel de visualizaciones seleccionamos Py\n\n![](imag5.png)\n\nPasamos como valores las variables que vamos a graficar [Alerta:]{style=\"color:red\"} como Power BI elimina duplicados automáticamente necesitamos pasar una variable index\n\n![](imag6.png)\n\n\nEn el editor de script de python escribimos el código para generar la gráfica\n\n![](imag7.png)\n\nEl código que vamos a colocar en este script en este caso es el siguiente:\n\n::: {#a70930b2 .cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\nfig, ax = plt.subplots(nrows = 2, ncols =3, figsize=(20,7))\nsb.histplot(data=dataset, x='nota matematicas', ax= ax[0,0],color='lightblue')\nsb.histplot(data=dataset, x='nota escritura', ax = ax[0,1], color='lightgray')\nsb.histplot(data=dataset, x = 'nota lectura', ax =ax[0,2], color ='turquoise')\n# Añadimos la media a cada gráfico\np_mate =dataset['nota matematicas'].mean()\np_escr = dataset['nota escritura'].mean()\np_lect = dataset['nota lectura'].mean()\nax[0,0].axvline(p_mate, color='red', linestyle='--')\nax[0,1].axvline(p_escr, color='red', linestyle='--')\nax[0,2].axvline(p_lect, color='red', linestyle='--')\n#añadimos una etiqueta a la media\nax[0,0].annotate(f'{p_mate: .2f}', (p_mate,0), color='red',size= 18)\nax[0,1].annotate(f'{p_escr: .2f}', (p_escr,0), color='red',size= 18)\nax[0,2].annotate(f'{p_lect: .2f}', (p_lect,0), color='red',size= 18)\n# Añadimos los titulos\nax[0,0].set_title('Histograma de notas de Matemáticas')\nax[0,1].set_title('Histograma de notas de Escritura')\nax[0,2].set_title('Histograma de notas de Lectura')\n\n#Boxplots\nsb.boxplot(data=dataset, x='nota matematicas', ax=ax[1,0], showmeans=True, color = 'lightblue')\nsb.boxplot(data=dataset, x='nota lectura', ax=ax[1,1], showmeans=True, color ='lightgray')\nsb.boxplot(data=dataset, x='nota escritura', ax=ax[1,2], showmeans=True, color= 'turquoise')\n\nplt.tight_layout()\nplt.show()\n```\n:::\n\n\nFinalmente creamos el dashboard de control añadiendo algunos segmentadores o lo que necesitemos\n\n![](imag8.png)\n\nDe esta manera podemos combinar python y Power BI para tener un tablero interactivo \n\n![](imag9.png)\n\n\n![](imag10.png)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}