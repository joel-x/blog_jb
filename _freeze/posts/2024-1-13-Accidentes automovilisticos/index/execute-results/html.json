{
  "hash": "281a7a5099d1739cbda0f547ace6c7c5",
  "result": {
    "markdown": "---\ntitle: Accidentes automovilisticos Conjunto de datos EDA\nauthor: Joel burbano\ndate: 1-13-2024\ncategories: [Python]\ndescription: En este apartado vamos a analizar datos de accidentes automovilisticos\n---\n\n# Importamos las librerias necesarias\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\npd.options.display.max_columns=None #para que se despliegue todas las columnas\n\nimport warnings \nwarnings.filterwarnings('ignore')\nfrom matplotlib import cm\nc4=cm.get_cmap('Set3')\n```\n:::\n\n\n# Cargamos la data\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf=pd.read_excel(\"dataset.xlsx\")\n```\n:::\n\n\nRevisemos las 5 primeras filas de datos\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf.head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Month</th>\n      <th>Day</th>\n      <th>Weekend?</th>\n      <th>Hour</th>\n      <th>Collision Type</th>\n      <th>Injury Type</th>\n      <th>Primary Factor</th>\n      <th>Reported_Location</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>5</td>\n      <td>Weekday</td>\n      <td>0.0</td>\n      <td>2-Car</td>\n      <td>No injury/unknown</td>\n      <td>OTHER (DRIVER) - EXPLAIN IN NARRATIVE</td>\n      <td>1ST &amp; FESS</td>\n      <td>39.159207</td>\n      <td>-86.525874</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>Weekday</td>\n      <td>1500.0</td>\n      <td>2-Car</td>\n      <td>No injury/unknown</td>\n      <td>FOLLOWING TOO CLOSELY</td>\n      <td>2ND &amp; COLLEGE</td>\n      <td>39.161440</td>\n      <td>-86.534848</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>Weekend</td>\n      <td>2300.0</td>\n      <td>2-Car</td>\n      <td>Non-incapacitating</td>\n      <td>DISREGARD SIGNAL/REG SIGN</td>\n      <td>BASSWOOD &amp; BLOOMFIELD</td>\n      <td>39.149780</td>\n      <td>-86.568890</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>7</td>\n      <td>Weekend</td>\n      <td>900.0</td>\n      <td>2-Car</td>\n      <td>Non-incapacitating</td>\n      <td>FAILURE TO YIELD RIGHT OF WAY</td>\n      <td>GATES &amp; JACOBS</td>\n      <td>39.165655</td>\n      <td>-86.575956</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>7</td>\n      <td>Weekend</td>\n      <td>1100.0</td>\n      <td>2-Car</td>\n      <td>No injury/unknown</td>\n      <td>FAILURE TO YIELD RIGHT OF WAY</td>\n      <td>W 3RD</td>\n      <td>39.164848</td>\n      <td>-86.579625</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Procedmos con la limpieza da la data\n\nRealizamos una revisión de duplicados\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.duplicated().value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\nFalse    53879\nTrue        64\nName: count, dtype: int64\n```\n:::\n:::\n\n\nal parecer tenemos $64$ filas repetidas\n\nahora observemos la información de los datos \n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 53943 entries, 0 to 53942\nData columns (total 11 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   Year               53943 non-null  int64  \n 1   Month              53943 non-null  int64  \n 2   Day                53943 non-null  int64  \n 3   Weekend?           53875 non-null  object \n 4   Hour               53718 non-null  float64\n 5   Collision Type     53937 non-null  object \n 6   Injury Type        53943 non-null  object \n 7   Primary Factor     52822 non-null  object \n 8   Reported_Location  53908 non-null  object \n 9   Latitude           53913 non-null  float64\n 10  Longitude          53913 non-null  float64\ndtypes: float64(3), int64(3), object(5)\nmemory usage: 4.5+ MB\n```\n:::\n:::\n\n\nVeamos el rango de años que contiene la data\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nprint(\"Data desde el año\",df.Year.min(), \" hasta \", df.Year.max() )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nData desde el año 2003  hasta  2015\n```\n:::\n:::\n\n\nAnalicemos los tipos de colisión que existen en la data\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndf['Collision Type'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=49}\n```\nCollision Type\n2-Car               37606\n1-Car               10245\n3+ Cars              3152\nMoped/Motorcycle     1007\nBus                   850\nPedestrian            609\nCyclist               468\nName: count, dtype: int64\n```\n:::\n:::\n\n\n# Visualización de la data\n\n## Frecuencia de los tipos de acciedentes\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nsb.countplot(x=df['Collision Type'],palette='Set3')\nplt.ylabel('Frecuencia')\nplt.xticks(rotation=65)\nplt.title(\"Frecuencia de tipos de Accidentes\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=610 height=552}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nObservamos que existe una mayor cantidad de accidentes entre dos vehículos, por otro lado la cantidad de accidentes de bicicletas es la menor.\n\n## Accidentes ocurridos **entre semana** vs **fin de semana**\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nsb.countplot(x=df['Weekend?'],palette='Accent')\nplt.ylabel('Frecuencia')\nplt.xticks(rotation=65)\nplt.title(\"Entre semana vs Fin de semana\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-10-output-1.png){width=610 height=497}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nObservamos que el Fin de semana es cuando mas ocurren accidentes.\n\n## Porcentaje de lesiones por Categoria\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nles_val=df['Injury Type'].value_counts()\nles_val\n```\n\n::: {.cell-output .cell-output-display execution_count=52}\n```\nInjury Type\nNo injury/unknown     41603\nNon-incapacitating    11136\nIncapacitating         1089\nFatal                   115\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nplt.pie(les_val,labels=les_val.index,startangle=30,shadow=True,autopct='%1.1f%%',rotatelabels=30,explode=(0.1,0.1,0.1,0.1),colors=[c4(0.9),c4(0.2),c4(0.3),c4(0.6)])\nplt.title('Porcentaje de lesiones por Categoria')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-1.png){width=614 height=409}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nObservamos que el $0.2\\%$ de accidentes son Fatales. Por otro lado algo que sería de mucho interes saber de cuantos accidentes no se conoce la lesión ocasionada puesto que la probabilidad de no tener lesiones es muy baja.\n\n## Motivo mas comun por el cual suceden accidentes\n\nPrimero indagaremos cuantos Factores Primarios existen en la data\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndf['Primary Factor'].nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```\n55\n```\n:::\n:::\n\n\nDado que existen $55$ Factores Primarios nos quedaremos con el top 20\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\npfdf=df['Primary Factor'].value_counts().head(20)\n```\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nfig=plt.figure(figsize=(10,10))\naxis=fig.add_axes([1,1,1,1])\nsb.swarmplot(x=pfdf,y=pfdf.index,ax=axis)\nfor i,j in enumerate(pfdf):\n  axis.text(j,i,j)\nplt.xlabel('Ocurrencia')\nplt.title('Motivos principales por los que ocurren accidentes')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-15-output-1.png){width=1312 height=1040}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n## Top 30 lugares mas frecuente donde ocurren accidentes\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nldf=df['Reported_Location'].value_counts().head(30)\n```\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nfig1=plt.figure()\naxis1=fig1.add_axes([1,1,1,1])\nsb.barplot(x=ldf,y=ldf.index,ax=axis1,palette=\"viridis\")\nfor i,j in enumerate(ldf):\n  axis1.text(j,i,j,va='top')\naxis1.set_xlabel('Frecuencia')\naxis1.set_title('Lugares con mayor frecuencia de Accidentes')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-17-output-1.png){width=888 height=560}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n## Tipos de Colisiones en diferentes años\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\naños=df.groupby('Year')\nkeys=años.groups.keys()\n```\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\ninfobox=[]\nfor i in range(2003,2016):\n  infobox.append(años.get_group(i)['Collision Type'].value_counts())\n```\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nc2=cm.get_cmap('terrain')\n```\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\nfrom IPython.display import display, Markdown\n```\n:::\n\n\n**Colisiones por Año**\n\n\n::: {.panel-tabset}\n\n``` {.python .cell-code}\ncount=0\nval=0.1\nfor i in range(2003,2016):\n  display(Markdown(f\"## {i}\"))\n  sb.pointplot(x=infobox[count].index,y=infobox[count],color=c2(val))\n  plt.xticks(rotation=65)\n  plt.ylabel('Frecuencia')\n  plt.title('%d Tipo de colisión'%(i))\n  plt.show()\n  display(Markdown(f\" \"))\n  plt.clf()\n  count+=1\n  val+=0.1\n  if val>=0.9:\n    c2=cm.get_cmap('turbo')\n    val=0.1\n```\n## 2003\n![](index_files/figure-html/cell-22-output-2.png){width=602 height=553}\n \n## 2004\n![](index_files/figure-html/cell-22-output-5.png){width=602 height=553}\n \n## 2005\n![](index_files/figure-html/cell-22-output-8.png){width=602 height=553}\n \n## 2006\n![](index_files/figure-html/cell-22-output-11.png){width=602 height=553}\n \n## 2007\n![](index_files/figure-html/cell-22-output-14.png){width=602 height=553}\n \n## 2008\n![](index_files/figure-html/cell-22-output-17.png){width=602 height=553}\n \n## 2009\n![](index_files/figure-html/cell-22-output-20.png){width=602 height=553}\n \n## 2010\n![](index_files/figure-html/cell-22-output-23.png){width=602 height=553}\n \n## 2011\n![](index_files/figure-html/cell-22-output-26.png){width=602 height=553}\n \n## 2012\n![](index_files/figure-html/cell-22-output-29.png){width=602 height=553}\n \n## 2013\n![](index_files/figure-html/cell-22-output-32.png){width=602 height=553}\n \n## 2014\n![](index_files/figure-html/cell-22-output-35.png){width=602 height=553}\n \n## 2015\n![](index_files/figure-html/cell-22-output-38.png){width=602 height=553}\n \n```\n<Figure size 672x480 with 0 Axes>\n```\n\n\n:::\n\n\n<!-- Poner un grafico dínamico -->\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}