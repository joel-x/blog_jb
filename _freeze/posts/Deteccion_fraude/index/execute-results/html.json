{
  "hash": "b0ceafd82db96787dcd0e2f811b3a03f",
  "result": {
    "markdown": "---\ntitle: \"Detección de fraude con tarjetas de Crédito\"\nauthor: \"Joel Burbano\"\ndate: 2023-12-17\ncategories: ['Python']\n---\n\nEn el presente proyecto se pretende analizar un conjunto de datos de transacciones crediticias recolectadas durante dos días en el mes de de Septiembre del 2013 por European cardholders\n\nEmpezaremos por importar las librerias necesarias para realizar el análisis\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n```\n:::\n\n\nProcedemos a leer los datos con pandas\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n#df: base de datos de las transacciones\ndf=pd.read_csv(\"creditcard.csv.zip\")\n```\n:::\n\n\nVerificamos que cantidad de datos tenemos\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n(284807, 31)\n```\n:::\n:::\n\n\nTenemos que existen 31 columnas (variables) y 284807 filas (registros)\n\nAhora bien procedemos a revisar la calidad de este conjunto de datos\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.isnull().any()\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nTime      False\nV1        False\nV2        False\nV3        False\nV4        False\nV5        False\nV6        False\nV7        False\nV8        False\nV9        False\nV10       False\nV11       False\nV12       False\nV13       False\nV14       False\nV15       False\nV16       False\nV17       False\nV18       False\nV19       False\nV20       False\nV21       False\nV22       False\nV23       False\nV24       False\nV25       False\nV26       False\nV27       False\nV28       False\nAmount    False\nClass     False\ndtype: bool\n```\n:::\n:::\n\n\nObservamos que no hay variables con datos nulos.\n\nAhora bien echemos un vistazo a la variable `Class` la cual contiene la información sobre las transacciones fraudulentas\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf[\"Class\"].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nClass\n0    284315\n1       492\nName: count, dtype: int64\n```\n:::\n:::\n\n\nNotamos que solamente 492 transacciones son fraudulentas\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndf['Class'].value_counts(normalize=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nClass\n0    0.998273\n1    0.001727\nName: proportion, dtype: float64\n```\n:::\n:::\n\n\nes decir solo el $0.17\\%$ de transacciones son fraudulentas\n\nAhora bien empecemos a intentar predecir\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nfrom sklearn.model_selection import train_test_split\n```\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nX=df.drop(labels='Class',axis=1)\ny=df.loc[:,'Class']\n\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.3,random_state=1, stratify=y)\n```\n:::\n\n\nAhora bien, se realiza un análisis exploratorio de los datos\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nX_train['Time'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\ncount    199364.000000\nmean      94675.212852\nstd       47536.519022\nmin           0.000000\n25%       54039.000000\n50%       84588.500000\n75%      139243.250000\nmax      172792.000000\nName: Time, dtype: float64\n```\n:::\n:::\n\n\nRealicemos una conversión de la variable `Time` de segundos a horas para facilitar la interpretación\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nX_train.loc[:,'Time']=X_train.Time/3600\nX_test.loc[:,'Time']=X_test.Time/3600\n```\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nplt.figure(figsize=(12,4))\nsb.displot(X_train['Time'],bins=40,kde=False)\nplt.xlim([0,40])\nplt.xticks(np.arange(0,48,6))\nplt.xlabel('Tiempo despues de la primera transacción (h)')\nplt.ylabel('Conteo')\nplt.title('Tiempo de transacciones')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 1152x384 with 0 Axes>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-2.png){width=473 height=491}\n:::\n:::\n\n\nNotamos que existen dos picos en la gráfica, el primero entre las 10 y 22 primeras horas y el segundo entre las 34 y 40 horas\n\nAnalicemos la variable `Amount`\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nX_train['Amount'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\ncount    199364.000000\nmean         88.659351\nstd         247.240287\nmin           0.000000\n25%           5.637500\n50%          22.000000\n75%          78.000000\nmax       25691.160000\nName: Amount, dtype: float64\n```\n:::\n:::\n\n\nrealicemos una revisión gráfica\n\nprimero un histograma\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nplt.figure(figsize=(12,4))\nsb.displot(X_train['Amount'],bins=50,kde=False)\nplt.ylabel('Conteo')\nplt.title('Montos de Transacción')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 1152x384 with 0 Axes>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-14-output-2.png){width=470 height=490}\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nplt.figure(figsize=(12,4))\nsb.boxplot(x=X_train[\"Amount\"])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-15-output-1.png){width=917 height=356}\n:::\n:::\n\n\nObservemos que los datos se encuentran fuertemente sesgados a la derecha. Para asegurarnos calculamos la asimetría\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nX_train['Amount'].skew()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n16.950540423177653\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nX_train.head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Time</th>\n      <th>V1</th>\n      <th>V2</th>\n      <th>V3</th>\n      <th>V4</th>\n      <th>V5</th>\n      <th>V6</th>\n      <th>V7</th>\n      <th>V8</th>\n      <th>V9</th>\n      <th>...</th>\n      <th>V20</th>\n      <th>V21</th>\n      <th>V22</th>\n      <th>V23</th>\n      <th>V24</th>\n      <th>V25</th>\n      <th>V26</th>\n      <th>V27</th>\n      <th>V28</th>\n      <th>Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>105644</th>\n      <td>19.340833</td>\n      <td>1.135011</td>\n      <td>-0.663898</td>\n      <td>0.703924</td>\n      <td>0.069871</td>\n      <td>-0.488154</td>\n      <td>1.312078</td>\n      <td>-0.897198</td>\n      <td>0.463148</td>\n      <td>-0.478801</td>\n      <td>...</td>\n      <td>-0.677938</td>\n      <td>-0.331487</td>\n      <td>-0.069644</td>\n      <td>0.183987</td>\n      <td>-0.618678</td>\n      <td>0.089015</td>\n      <td>0.521419</td>\n      <td>0.086390</td>\n      <td>0.004782</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>139790</th>\n      <td>23.155278</td>\n      <td>-1.786262</td>\n      <td>1.118886</td>\n      <td>1.347969</td>\n      <td>-0.379954</td>\n      <td>-1.240680</td>\n      <td>0.467667</td>\n      <td>0.081125</td>\n      <td>0.964933</td>\n      <td>0.042585</td>\n      <td>...</td>\n      <td>-0.099266</td>\n      <td>-0.047902</td>\n      <td>-0.182530</td>\n      <td>-0.162509</td>\n      <td>-0.405178</td>\n      <td>0.512595</td>\n      <td>0.299398</td>\n      <td>-0.042882</td>\n      <td>-0.059130</td>\n      <td>141.73</td>\n    </tr>\n    <tr>\n      <th>158758</th>\n      <td>31.034167</td>\n      <td>-0.683414</td>\n      <td>0.679341</td>\n      <td>2.615556</td>\n      <td>2.362138</td>\n      <td>-0.012716</td>\n      <td>0.603826</td>\n      <td>0.574245</td>\n      <td>-0.679978</td>\n      <td>-0.811409</td>\n      <td>...</td>\n      <td>0.372610</td>\n      <td>-0.007167</td>\n      <td>0.463597</td>\n      <td>-0.243134</td>\n      <td>0.084557</td>\n      <td>-0.453177</td>\n      <td>2.687676</td>\n      <td>-1.084269</td>\n      <td>-0.511626</td>\n      <td>36.19</td>\n    </tr>\n    <tr>\n      <th>130845</th>\n      <td>22.067778</td>\n      <td>1.183540</td>\n      <td>-0.493000</td>\n      <td>0.755202</td>\n      <td>-0.963160</td>\n      <td>-0.850295</td>\n      <td>0.145905</td>\n      <td>-0.794616</td>\n      <td>0.302199</td>\n      <td>1.656943</td>\n      <td>...</td>\n      <td>-0.168134</td>\n      <td>0.039588</td>\n      <td>0.339340</td>\n      <td>-0.053125</td>\n      <td>-0.298049</td>\n      <td>0.423994</td>\n      <td>-0.652284</td>\n      <td>0.102582</td>\n      <td>0.017292</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>88908</th>\n      <td>17.318056</td>\n      <td>1.137583</td>\n      <td>0.105478</td>\n      <td>0.784402</td>\n      <td>1.254973</td>\n      <td>-0.600870</td>\n      <td>-0.360836</td>\n      <td>-0.161727</td>\n      <td>0.076092</td>\n      <td>0.280587</td>\n      <td>...</td>\n      <td>-0.178887</td>\n      <td>-0.195692</td>\n      <td>-0.443664</td>\n      <td>0.046270</td>\n      <td>0.516246</td>\n      <td>0.447943</td>\n      <td>-0.554949</td>\n      <td>0.031821</td>\n      <td>0.018177</td>\n      <td>7.60</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}